<?xml version="1.0"?>
  <!-- =========================================================== -->
  <!-- Add a <collision> tag with a capsule, made from a cylinder  -->
  <!-- with two spheres at its caps. The capsule will always be    -->
  <!-- aligned with the axis of 'direction' you pass along.        -->
  <!--                                                             -->
  <!-- radius: Radii of both the cylinder and both spheres [m]     -->
  <!-- length: Length of the cylinder/distance between the centers -->
  <!--         of the spheres. NOT overall length of capsule!      -->
  <!-- xyz:    Position of the center of the capsule/cylinder      -->
  <!-- direction: One of { x, y, z, -x, -y, -z }                   -->
  <!-- =========================================================== -->
<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:macro name="collision_capsule_custom" params="radius length xyz:='0 0 0' direction:='z 0'">
    <xacro:property name="r" value="${pi/2.0 if direction.split(' ')[0]=='y' else 0}" />
    <xacro:property name="p" value="${pi/2.0 if direction.split(' ')[0]=='x' else 0}" />
    <xacro:property name="yaw" value="${direction.split(' ')[1]}" />
    <xacro:property name="x" value="${xyz.split(' ')[0]}" />
    <xacro:property name="y" value="${xyz.split(' ')[1]}" />
    <xacro:property name="z" value="${xyz.split(' ')[2]}" />
    <!-- Sphere center offsets from center of cylinder -->
    <xacro:property name="sx" value="${length*cos(float(direction.split(' ')[1])) / 2.0 if direction.split(' ')[0]=='x' or direction.split(' ')[1] != '0' else 0}" />
    <xacro:property name="sy" value="${length*sin(float(direction.split(' ')[1])) / 2.0 if direction.split(' ')[0]=='y' or direction.split(' ')[1] != '0' else 0}" />
    <xacro:property name="sz" value="${length / 2.0 if direction.split(' ')[0]=='z' else 0}" />

    <collision>
      <origin xyz="${x} ${y} ${z}" rpy="${r} ${p} ${yaw}"/>
      <geometry>
        <cylinder radius="${radius}" length="${length}" />
      </geometry>
    </collision>
    <collision>
      <origin xyz="${x+sx} ${y+sy} ${z+sz}" />
      <geometry>
        <sphere radius="${radius}" />
      </geometry>
    </collision>
    <collision>
      <origin xyz="${x-sx} ${y-sy} ${z-sz}" />
      <geometry>
        <sphere radius="${radius}" />
      </geometry>
    </collision>
  </xacro:macro>
</robot>